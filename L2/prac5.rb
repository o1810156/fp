# 原理

# xとyの最大公約数をgとすると、

# x = ag
# y = bg

# と表せられる。

# ここで

# x = yのとき 原理(1)
#     a = bで、gは最大公約数である必要があるため、
#     a = b = 1
#     ゆえに x = y = g

# x > yのとき(y > xも同様) 原理(2)
#     x - y = (a - b)g
#     ここでx - yは整数でありまた右辺より最大公約数gの倍数である。
#     したがって、x - yとyの最大公約数もまたgとなる。
    
#     よって最大公約数を返す関数gcd(x, y)に関し
#     gcd(x, y) = g(x - y, y)

# 疑似コード

# gcd(x, y): xとyの最大公約数を返す
#     もしx = yのとき
#         最大公約数は x # 原理(1)より
#     ではなくてx > yのとき
#         最大公約数は gcd(x - y, y) # 原理(2)より
#     そうではない(このときx < y)
#         最大公約数は gcd(x, y - x) # 原理(2)より
#     分岐終了

# プログラムの原理

# 数学的な考えをもとに再帰処理的に呼び出しているだけである。
# したがって上記原理による部分がすべてである。

def gcd(x, y)
    if x == y
        return x
    elsif x > y
        return gcd(x - y, y)
    else
        return gcd(x, y - x)
    end
end

puts gcd(27, 36) # => 9
puts gcd(24, 36) # => 12
puts gcd(3, 7) # => 1 # 互いに素の場合も求められる